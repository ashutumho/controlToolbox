<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from extractpid.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="extractpid" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>extractpid</refname>
    <refpurpose>Extract the parallel PID parameters from the transfer function</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   output = extractpid(sys)
   [Kp,Ki,Kd,Tf] = extractpid(sys)
   [Kp,Ki,Kd,Tf,Ts] = extractpid(sys)
   [Kp,Ki,Kd,Tf,Ts] = extractpid(sys,indexVector)
   [Kp,Ki,Kd,Tf,Ts] = extractpid(sys,indexNumber)
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>sys :</term>
      <listitem><para> a matrix of double, represents the transfer function of parallel PID</para></listitem></varlistentry>
   <varlistentry><term>indexVector:</term>
      <listitem><para> a row vector of integer, represents the entry at the vector of array of the sys</para></listitem></varlistentry>
   <varlistentry><term>indexNumber:</term>
      <listitem><para>  a double, represents the index number of the array of sys when it arranged in serially</para></listitem></varlistentry>
   <varlistentry><term>Kp :</term>
      <listitem><para> a matrix of double, represents the  Proportional gain of transfer function</para></listitem></varlistentry>
   <varlistentry><term>Ki :</term>
      <listitem><para> a matrix of double, represents the  Integral gain of transfer function</para></listitem></varlistentry>
   <varlistentry><term>Tf :</term>
      <listitem><para> a matrix of double, represents the Time constant of first order filter of transfer function</para></listitem></varlistentry>
   <varlistentry><term>Ts:</term>
      <listitem><para> a double, represents the Sampling timing</para></listitem></varlistentry>
   <varlistentry><term>output :</term>
      <listitem><para> a matrix of double, represents only Proportional gain of transfer function</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
   </para>
   <para>
output = extractpid(sys) extract the PID parameters and returns only the proportional gain
   </para>
   <para>
[Kp,Ki,Kd,Tf] = extractpid(sys) extract the PID parameters in continuous domain and returns proportional, integral and derivative gain with time constant of first order filter
   </para>
   <para>
[Kp,Ki,Kd,Tf,Ts] = extractpid(sys) extract the PID parameters in discrete domain and returns proportional, integral and derivative gain with time constant of first order filter
   </para>
   <para>
[Kp,Ki,Kd,Tf,Ts] = extractpid(sys,indexVector) extract the PID parameters and returns proportional, integral and derivative gain with time constant of first order filter at that row vector
   </para>
   <para>
[Kp,Ki,Kd,Tf,Ts] = extractPID(sys,indexVector) extract the PID parameters and returns proportional, integral and derivative gain with time constant of first order filter at that index number
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
s = poly(0,'s'); sys = syslin('c',3*(s+1)*(s+2)/s);
output = extractpid(sys)
[Kp,Ki,Kd,Tf,Ts] = extractpid(sys)
z = poly(0,'z'); sys = syslin(0.1,(7*z-6.9)/(4*z-3.9));
[Kp,Ki,Kd,Tf,Ts] = extractpid(sys)
sys = pid(rand(2,3,4),2,4,5);
[Kp,Ki,Kd,Tf,Ts] = extractpid(sys,[1 3 2])
[Kp,Ki,Kd,Tf,Ts] = extractpid(sys,5)
   ]]></programlisting>
</refsection>

<refsection>
   <title>Authors</title>
   <simplelist type="vert">
   <member>Ashutosh Kumar Bhargava</member>
   </simplelist>
</refsection>
</refentry>
